{"ast":null,"code":"var _jsxFileName = \"/home/edgardo/WebstormProjects/prova-react-three-fiber/src/components/canvas/components/sfera.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useRotation } from \"../../../hooks/useRotation\";\nimport { useSpring } from \"@react-spring/web\";\nimport { useDrag } from \"react-use-gesture\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Sfera = ({\n  radius,\n  widthSegments,\n  heightSegments,\n  color,\n  position,\n  children,\n  hasRotation = false\n}) => {\n  _s();\n\n  const myObject = useRef();\n  useRotation(myObject, false, true, false, hasRotation);\n  const [{\n    x,\n    y\n  }, api] = useSpring(() => ({\n    x: 0,\n    y: 0\n  }));\n  const bind = useDrag(({\n    down,\n    movement: [mx, my]\n  }) => {\n    api.start({\n      x: down ? mx : 0,\n      y: down ? my : 0,\n      immediate: down\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: position,\n    ref: myObject,\n    ...bind,\n    style: {\n      x,\n      y\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n      args: [radius, widthSegments, heightSegments]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), children === undefined ? /*#__PURE__*/_jsxDEV(\"mesh\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 44\n    }, this) : children.map(child => {\n      return child;\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sfera, \"weuoqOpMaJv9qYxlhok8k6SuoL4=\", false, function () {\n  return [useRotation, useSpring, useDrag];\n});\n\n_c = Sfera;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sfera\");","map":{"version":3,"sources":["/home/edgardo/WebstormProjects/prova-react-three-fiber/src/components/canvas/components/sfera.tsx"],"names":["React","useRef","useRotation","useSpring","useDrag","Sfera","radius","widthSegments","heightSegments","color","position","children","hasRotation","myObject","x","y","api","bind","down","movement","mx","my","start","immediate","undefined","map","child"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AAEA,SAAQC,WAAR,QAA0B,4BAA1B;AAEA,SAAQC,SAAR,QAAkC,mBAAlC;AACA,SAAQC,OAAR,QAAsB,mBAAtB;;AAYA,OAAO,MAAMC,KAA2B,GAAG,CACvC;AAACC,EAAAA,MAAD;AAAQC,EAAAA,aAAR;AAAsBC,EAAAA,cAAtB;AAAsCC,EAAAA,KAAtC;AAA6CC,EAAAA,QAA7C;AAAuDC,EAAAA,QAAvD;AAAiEC,EAAAA,WAAW,GAAG;AAA/E,CADuC,KAErC;AAAA;;AACF,QAAMC,QAAQ,GAAGZ,MAAM,EAAvB;AAEAC,EAAAA,WAAW,CAACW,QAAD,EAAW,KAAX,EAAkB,IAAlB,EAAwB,KAAxB,EAA+BD,WAA/B,CAAX;AAEA,QAAM,CAAC;AAAEE,IAAAA,CAAF;AAAKC,IAAAA;AAAL,GAAD,EAAWC,GAAX,IAAkBb,SAAS,CAAC,OAAO;AAAEW,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAP,CAAD,CAAjC;AAEA,QAAME,IAAI,GAAGb,OAAO,CAAC,CAAC;AAAEc,IAAAA,IAAF;AAAQC,IAAAA,QAAQ,EAAE,CAACC,EAAD,EAAKC,EAAL;AAAlB,GAAD,KAAkC;AACnDL,IAAAA,GAAG,CAACM,KAAJ,CAAU;AAAER,MAAAA,CAAC,EAAEI,IAAI,GAAGE,EAAH,GAAQ,CAAjB;AAAoBL,MAAAA,CAAC,EAAEG,IAAI,GAAGG,EAAH,GAAQ,CAAnC;AAAsCE,MAAAA,SAAS,EAAEL;AAAjD,KAAV;AACH,GAFmB,CAApB;AAIA,sBAEI;AAAM,IAAA,QAAQ,EAAER,QAAhB;AAA0B,IAAA,GAAG,EAAEG,QAA/B;AAAA,OAA6CI,IAA7C;AAAmD,IAAA,KAAK,EAAE;AAACH,MAAAA,CAAD;AAAGC,MAAAA;AAAH,KAA1D;AAAA,4BACI;AAAgB,MAAA,IAAI,EAAE,CAACT,MAAD,EAAQC,aAAR,EAAsBC,cAAtB;AAAtB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAkB,MAAA,KAAK,EAAEC;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAISE,QAAQ,KAAKa,SAAd,gBAA2B;AAAA;AAAA;AAAA;AAAA,YAA3B,GAA2Cb,QAAQ,CAACc,GAAT,CAAaC,KAAK,IAAI;AACjE,aAAOA,KAAP;AACH,KAF8C,CAJnD;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAYH,CAzBM;;GAAMrB,K;UAKTH,W,EAEwBC,S,EAEXC,O;;;KATJC,K","sourcesContent":["import React, {useRef} from 'react';\nimport {useFrame} from \"@react-three/fiber\";\nimport {useRotation} from \"../../../hooks/useRotation\";\nimport {map} from \"react-three-gui/dist/utils\";\nimport {useSpring, animated} from \"@react-spring/web\";\nimport {useDrag} from \"react-use-gesture\";\n\ninterface SferaProps {\n    radius: number,\n    widthSegments: number,\n    heightSegments: number,\n    color: string,\n    position?: number[],\n    hasRotation?: boolean ,\n    children?: JSX.Element[]\n}\n\nexport const Sfera: React.FC<SferaProps> = (\n    {radius,widthSegments,heightSegments, color, position, children, hasRotation = false }\n)  => {\n    const myObject = useRef<any>();\n\n    useRotation(myObject, false, true, false, hasRotation)\n\n    const [{ x, y }, api] = useSpring(() => ({ x: 0, y: 0 }))\n\n    const bind = useDrag(({ down, movement: [mx, my] }) => {\n        api.start({ x: down ? mx : 0, y: down ? my : 0, immediate: down })\n    })\n\n    return(\n        \n        <mesh position={position} ref={myObject} {...bind} style={{x,y}}>\n            <sphereGeometry args={[radius,widthSegments,heightSegments]}/>\n            <meshToonMaterial color={color}/>\n            {\n                (children === undefined) ? <mesh></mesh> : children.map(child => {\n                return child;\n            })}\n        </mesh>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}