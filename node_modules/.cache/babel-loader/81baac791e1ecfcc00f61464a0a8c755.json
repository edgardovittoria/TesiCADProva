{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const CanvasSlice = createSlice({\n  name: 'canvas',\n  initialState: {\n    components: []\n  },\n  reducers: {\n    //qui vanno inserite le azioni\n    addComponents(state, action) {\n      state.components.push(action.payload);\n    },\n\n    removeComponent(state, action) {\n      state.components = state.components.filter(component => {\n        return component !== action.payload;\n      });\n    }\n\n  },\n  extraReducers: {//qui inseriamo i metodi : PENDING, FULLFILLED, REJECT utili per la gestione delle richieste asincrone\n  }\n});\nexport const {\n  //qui vanno inserite tutte le azioni che vogliamo esporatare\n  addComponents,\n  removeComponent\n} = CanvasSlice.actions;\nexport const canvasStateSelector = state => state.canvas;","map":{"version":3,"sources":["/home/edgardo/WebstormProjects/prova-react-three-fiber/src/store/canvasSlice.ts"],"names":["createSlice","CanvasSlice","name","initialState","components","reducers","addComponents","state","action","push","payload","removeComponent","filter","component","extraReducers","actions","canvasStateSelector","canvas"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAOA,OAAO,MAAMC,WAAW,GAAGD,WAAW,CAAC;AACnCE,EAAAA,IAAI,EAAE,QAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,UAAU,EAAE;AADF,GAFqB;AAKnCC,EAAAA,QAAQ,EAAE;AACN;AACAC,IAAAA,aAAa,CAACC,KAAD,EAAqBC,MAArB,EAAwD;AACjED,MAAAA,KAAK,CAACH,UAAN,CAAiBK,IAAjB,CAAsBD,MAAM,CAACE,OAA7B;AACH,KAJK;;AAKNC,IAAAA,eAAe,CAACJ,KAAD,EAAqBC,MAArB,EAAwD;AACnED,MAAAA,KAAK,CAACH,UAAN,GAAmBG,KAAK,CAACH,UAAN,CAAiBQ,MAAjB,CAAwBC,SAAS,IAAI;AACpD,eAAOA,SAAS,KAAKL,MAAM,CAACE,OAA5B;AACH,OAFkB,CAAnB;AAGH;;AATK,GALyB;AAgBnCI,EAAAA,aAAa,EAAE,CACX;AADW;AAhBoB,CAAD,CAA/B;AAsBP,OAAO,MAAM;AACT;AACAR,EAAAA,aAFS;AAGTK,EAAAA;AAHS,IAITV,WAAW,CAACc,OAJT;AAMP,OAAO,MAAMC,mBAAmB,GAAIT,KAAD,IAAoCA,KAAK,CAACU,MAAtE","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport type CanvasState = {\n    components: JSX.Element[],\n}\n\nexport const CanvasSlice = createSlice({\n    name: 'canvas',\n    initialState: {\n        components: [],\n    } as CanvasState,\n    reducers: {\n        //qui vanno inserite le azioni\n        addComponents(state: CanvasState, action: PayloadAction<JSX.Element>){\n            state.components.push(action.payload)\n        },\n        removeComponent(state: CanvasState, action: PayloadAction<JSX.Element>){\n            state.components = state.components.filter(component => {\n                return component !== action.payload;\n            })\n        }\n    },\n    extraReducers: {\n        //qui inseriamo i metodi : PENDING, FULLFILLED, REJECT utili per la gestione delle richieste asincrone\n}\n})\n\n\nexport const {\n    //qui vanno inserite tutte le azioni che vogliamo esporatare\n    addComponents,\n    removeComponent\n} = CanvasSlice.actions\n\nexport const canvasStateSelector = (state: { canvas: CanvasState }) => state.canvas"]},"metadata":{},"sourceType":"module"}