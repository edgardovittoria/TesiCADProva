{"ast":null,"code":"var _jsxFileName = \"/home/edgardo/WebstormProjects/prova-react-three-fiber/src/components/canvas/MyCanvas.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport { Sfera } from \"./components/sfera\";\nimport { useSelector } from \"react-redux\";\nimport { canvasStateSelector } from \"../../store/canvasSlice\";\nimport { useControl } from \"react-three-gui\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyCanvas = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const moon = [/*#__PURE__*/_jsxDEV(Sfera, {\n    radius: .2,\n    widthSegments: 6,\n    heightSegments: 6,\n    color: \"grey\",\n    position: [1, 0, 0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 34\n  }, this)];\n  const solarSystemFigli = [/*#__PURE__*/_jsxDEV(Sfera, {\n    radius: 1,\n    widthSegments: 6,\n    heightSegments: 6,\n    color: \"yellow\",\n    position: [0, 0, 0]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Sfera, {\n    radius: .5,\n    widthSegments: 6,\n    heightSegments: 6,\n    color: \"blue\",\n    position: [3, 0, 0],\n    children: moon,\n    hasRotation: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this)];\n  const components = useSelector(canvasStateSelector).components;\n  console.log(components);\n\n  function Keen() {\n    _s();\n\n    const orbit = useRef();\n    const transform = useRef();\n    const mode = useControl(\"mode\", {\n      type: \"select\",\n      items: [\"scale\", \"rotate\", \"translate\"]\n    }); //const { nodes, materials } = useLoader(GLTFLoader, \"/scene.gltf\")\n\n    useEffect(() => {\n      if (transform.current) {\n        const controls = transform.current;\n        controls.setMode(mode);\n\n        const callback = event => orbit.current.enabled = !event.value;\n\n        controls.addEventListener(\"dragging-changed\", callback);\n        return () => controls.removeEventListener(\"dragging-changed\", callback);\n      }\n    });\n  }\n\n  _s(Keen, \"RK8DfIt4iqhZYoJWJJ0Qrljr2D8=\", false, function () {\n    return [useControl];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"canvas-container\",\n    style: {\n      height: \"100vh\",\n      backgroundColor: \"#171A21\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      camera: {\n        position: [0, 50, 0],\n        fov: 20,\n        far: 1000,\n        near: 0.1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [20, 20, 20]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"gridHelper\", {\n        scale: [2.88, 1, 2.95]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        addEventListener: undefined,\n        hasEventListener: undefined,\n        removeEventListener: undefined,\n        dispatchEvent: undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(MyCanvas, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c = MyCanvas;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyCanvas\");","map":{"version":3,"sources":["/home/edgardo/WebstormProjects/prova-react-three-fiber/src/components/canvas/MyCanvas.tsx"],"names":["React","useRef","useEffect","Canvas","OrbitControls","Sfera","useSelector","canvasStateSelector","useControl","MyCanvas","moon","solarSystemFigli","components","console","log","Keen","orbit","transform","mode","type","items","current","controls","setMode","callback","event","enabled","value","addEventListener","removeEventListener","height","backgroundColor","width","position","fov","far","near","undefined"],"mappings":"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","sourcesContent":["import React, {useState, Fragment, useRef, useEffect} from 'react';\nimport {Canvas, useLoader, useThree} from \"@react-three/fiber\";\nimport {SolarSystem} from \"./components/solarSystem\";\nimport {OrbitControls} from \"@react-three/drei\";\nimport {Sfera} from \"./components/sfera\";\nimport {useSelector} from \"react-redux\";\nimport {canvasStateSelector} from \"../../store/canvasSlice\";\nimport {useControl} from \"react-three-gui\";\n\ninterface MyCanvasProps {\n}\n\nexport const MyCanvas: React.FC<MyCanvasProps> = () => {\n\n    const moon: JSX.Element[] = [<Sfera radius={.2} widthSegments={6} heightSegments={6} color=\"grey\" position={[1,0,0]} />]\n\n    const solarSystemFigli: JSX.Element[] = [\n        <Sfera radius={1} widthSegments={6} heightSegments={6} color=\"yellow\" position={[0,0,0]}/>,\n        <Sfera radius={.5} widthSegments={6} heightSegments={6} color=\"blue\" position={[3,0,0]} children={moon} hasRotation={true}/>\n    ]\n\n    const components = useSelector(canvasStateSelector).components;\n    console.log(components)\n\n    function Keen() {\n        const orbit = useRef()\n        const transform = useRef()\n        const mode = useControl(\"mode\", {type: \"select\", items: [\"scale\", \"rotate\", \"translate\"]})\n        //const { nodes, materials } = useLoader(GLTFLoader, \"/scene.gltf\")\n        useEffect(() => {\n            if (transform.current) {\n                const controls = transform.current\n                controls.setMode(mode)\n                const callback = event => (orbit.current.enabled = !event.value)\n                controls.addEventListener(\"dragging-changed\", callback)\n                return () => controls.removeEventListener(\"dragging-changed\", callback)\n            }\n        })\n\n    }\n\n    return(\n        <div id=\"canvas-container\" style={{height:\"100vh\", backgroundColor:\"#171A21\"}}>\n\n\n\n            <Canvas style={{width: \"100%\", height:\"100%\"}}\n                    camera={{position:[0,50,0], fov: 20, far:1000, near:0.1}}\n            >\n\n                    <ambientLight/>\n                    <pointLight position={[20, 20, 20]} />\n                    {/*{components}*/}\n                    <gridHelper scale={[2.88,1,2.95]}/>\n                    {/*<SolarSystem solarSystemFigli={solarSystemFigli}/>*/}\n                    <OrbitControls addEventListener={undefined} hasEventListener={undefined} removeEventListener={undefined} dispatchEvent={undefined}/>\n\n            </Canvas>\n\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}