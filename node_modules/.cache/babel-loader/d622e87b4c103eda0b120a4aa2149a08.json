{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const CanvasSlice = createSlice({\n  name: 'canavas',\n  initialState: {\n    components: []\n  },\n  reducers: {\n    //qui vanno inserite le azioni\n    addComponents(state, action) {\n      state.components.push(action.payload);\n    }\n\n  },\n  extraReducers: {//qui inseriamo i metodi : PENDING, FULLFILLED, REJECT utili per la gestione delle richieste asincrone\n  }\n});\nexport const {\n  //qui vanno inserite tutte le azioni che vogliamo esporatare\n  addComponents\n} = CanvasSlice.actions;\nexport const canvasStateSelector = state => state.components;","map":{"version":3,"sources":["/home/edgardo/WebstormProjects/prova-react-three-fiber/src/store/canvasSlice.ts"],"names":["createSlice","CanvasSlice","name","initialState","components","reducers","addComponents","state","action","push","payload","extraReducers","actions","canvasStateSelector"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAQA,OAAO,MAAMC,WAAW,GAAGD,WAAW,CAAC;AACnCE,EAAAA,IAAI,EAAE,SAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,UAAU,EAAE;AADF,GAFqB;AAKnCC,EAAAA,QAAQ,EAAE;AACN;AACAC,IAAAA,aAAa,CAACC,KAAD,EAAqBC,MAArB,EAAwD;AACjED,MAAAA,KAAK,CAACH,UAAN,CAAiBK,IAAjB,CAAsBD,MAAM,CAACE,OAA7B;AACH;;AAJK,GALyB;AAWnCC,EAAAA,aAAa,EAAE,CACX;AADW;AAXoB,CAAD,CAA/B;AAiBP,OAAO,MAAM;AACT;AACAL,EAAAA;AAFS,IAGTL,WAAW,CAACW,OAHT;AAKP,OAAO,MAAMC,mBAAmB,GAAIN,KAAD,IAAwCA,KAAK,CAACH,UAA1E","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { AppThunk } from './store';\n\nexport type CanvasState = {\n    components: JSX.Element[],\n}\n\nexport const CanvasSlice = createSlice({\n    name: 'canavas',\n    initialState: {\n        components: [],\n    } as CanvasState,\n    reducers: {\n        //qui vanno inserite le azioni\n        addComponents(state: CanvasState, action: PayloadAction<JSX.Element>){\n            state.components.push(action.payload)\n        }\n    },\n    extraReducers: {\n        //qui inseriamo i metodi : PENDING, FULLFILLED, REJECT utili per la gestione delle richieste asincrone\n}\n})\n\n\nexport const {\n    //qui vanno inserite tutte le azioni che vogliamo esporatare\n    addComponents\n} = CanvasSlice.actions\n\nexport const canvasStateSelector = (state: { components: CanvasState }) => state.components"]},"metadata":{},"sourceType":"module"}