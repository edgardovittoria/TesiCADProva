{"ast":null,"code":"var _jsxFileName = \"/home/edgardo/WebstormProjects/prova-react-three-fiber/src/components/sfera.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useRotation } from \"../hooks/useRotation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Sfera = ({\n  radius,\n  widthSegments,\n  heightSegments,\n  color,\n  position,\n  children,\n  hasRotation = false\n}) => {\n  _s();\n\n  const myObject = useRef();\n  useRotation(myObject, false, true, false, hasRotation);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: position,\n    ref: myObject,\n    children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n      args: [radius, widthSegments, heightSegments]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"meshToonMaterial\", {\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), children === undefined ? /*#__PURE__*/_jsxDEV(\"mesh\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 44\n    }, this) : children.map(child => {\n      return child;\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Sfera, \"1/k0Wh0ZZxmiEkEH8LeFX4np4Mw=\", false, function () {\n  return [useRotation];\n});\n\n_c = Sfera;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sfera\");","map":{"version":3,"sources":["/home/edgardo/WebstormProjects/prova-react-three-fiber/src/components/sfera.tsx"],"names":["React","useRef","useRotation","Sfera","radius","widthSegments","heightSegments","color","position","children","hasRotation","myObject","undefined","map","child"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AAEA,SAAQC,WAAR,QAA0B,sBAA1B;;AAaA,OAAO,MAAMC,KAA2B,GAAG,CACvC;AAACC,EAAAA,MAAD;AAAQC,EAAAA,aAAR;AAAsBC,EAAAA,cAAtB;AAAsCC,EAAAA,KAAtC;AAA6CC,EAAAA,QAA7C;AAAuDC,EAAAA,QAAvD;AAAiEC,EAAAA,WAAW,GAAG;AAA/E,CADuC,KAErC;AAAA;;AACF,QAAMC,QAAQ,GAAGV,MAAM,EAAvB;AAEAC,EAAAA,WAAW,CAACS,QAAD,EAAW,KAAX,EAAkB,IAAlB,EAAwB,KAAxB,EAA+BD,WAA/B,CAAX;AAEA,sBAEI;AAAM,IAAA,QAAQ,EAAEF,QAAhB;AAA0B,IAAA,GAAG,EAAEG,QAA/B;AAAA,4BACI;AAAgB,MAAA,IAAI,EAAE,CAACP,MAAD,EAAQC,aAAR,EAAsBC,cAAtB;AAAtB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAkB,MAAA,KAAK,EAAEC;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAISE,QAAQ,KAAKG,SAAd,gBAA2B;AAAA;AAAA;AAAA;AAAA,YAA3B,GAA2CH,QAAQ,CAACI,GAAT,CAAaC,KAAK,IAAI;AACjE,aAAOA,KAAP;AACH,KAF8C,CAJnD;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAYH,CAnBM;;GAAMX,K;UAKTD,W;;;KALSC,K","sourcesContent":["import React, {useRef} from 'react';\nimport {useFrame} from \"@react-three/fiber\";\nimport {useRotation} from \"../hooks/useRotation\";\nimport {map} from \"react-three-gui/dist/utils\";\n\ninterface SferaProps {\n    radius: number,\n    widthSegments: number,\n    heightSegments: number,\n    color: string,\n    position?: number[],\n    hasRotation?: boolean ,\n    children?: JSX.Element[]\n}\n\nexport const Sfera: React.FC<SferaProps> = (\n    {radius,widthSegments,heightSegments, color, position, children, hasRotation = false }\n)  => {\n    const myObject = useRef<any>();\n\n    useRotation(myObject, false, true, false, hasRotation)\n\n    return(\n\n        <mesh position={position} ref={myObject}>\n            <sphereGeometry args={[radius,widthSegments,heightSegments]}/>\n            <meshToonMaterial color={color}/>\n            {\n                (children === undefined) ? <mesh></mesh> : children.map(child => {\n                return child;\n            })}\n        </mesh>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}