{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useFrame } from \"@react-three/fiber\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Rotation = ({\n  objectToBeRotated\n}) => {\n  _s();\n\n  const myObject = useRef();\n  useFrame(({\n    clock\n  }) => {\n    myObject.current.rotation.z = clock.getElapsedTime();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: objectToBeRotated.map(obj => {\n      obj.props.ref = myObject;\n      console.log(obj);\n      return obj;\n    })\n  }, void 0, false);\n};\n\n_s(Rotation, \"qSY6ZHuxj/hqqxV4tSgIq6Kkp2s=\", false, function () {\n  return [useFrame];\n});\n\n_c = Rotation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rotation\");","map":{"version":3,"sources":["/home/edgardo/WebstormProjects/prova-react-three-fiber/src/components/rotation.tsx"],"names":["React","useRef","useFrame","Rotation","objectToBeRotated","myObject","clock","current","rotation","z","getElapsedTime","map","obj","props","ref","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAA6BC,MAA7B,QAA0C,OAA1C;AACA,SAAQC,QAAR,QAAuB,oBAAvB;;;AAMA,OAAO,MAAMC,QAAiC,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAyB;AAAA;;AACtE,QAAMC,QAAQ,GAAGJ,MAAM,EAAvB;AACAC,EAAAA,QAAQ,CAAC,CAAC;AAAEI,IAAAA;AAAF,GAAD,KAAe;AACpBD,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,QAAjB,CAA0BC,CAA1B,GAA8BH,KAAK,CAACI,cAAN,EAA9B;AACH,GAFO,CAAR;AAGA,sBACI;AAAA,cACKN,iBAAiB,CAACO,GAAlB,CAAsBC,GAAG,IAAI;AAC1BA,MAAAA,GAAG,CAACC,KAAJ,CAAUC,GAAV,GAAgBT,QAAhB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,aAAOA,GAAP;AACH,KAJA;AADL,mBADJ;AAUH,CAfM;;GAAMT,Q;UAETD,Q;;;KAFSC,Q","sourcesContent":["import React, {cloneElement, useRef} from 'react';\nimport {useFrame} from \"@react-three/fiber\";\n\ninterface RotationProps {\n    objectToBeRotated: JSX.Element[]\n}\n\nexport const Rotation: React.FC<RotationProps> = ({objectToBeRotated}) => {\n    const myObject = useRef<any>();\n    useFrame(({ clock }) => {\n        myObject.current.rotation.z = clock.getElapsedTime()\n    })\n    return(\n        <>\n            {objectToBeRotated.map(obj => {\n                obj.props.ref = myObject\n                console.log(obj)\n                return obj;\n            })}\n        </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}